[versions]
junit = "5.13.4"
keycloak-admin-client = "22.0.0"
keycloak-services = "26.3.2"
liquibase = "4.31.1"
mapstruct = "1.6.3"
reactor-test = "3.7.9"
resilience4j = "2.2.0"
spring-boot = "3.4.5"
spring-cloud = "4.3.0"
spring-kafka = "3.3.8"
spring-retry = "2.0.12"
spring-doc = "2.8.11"
swagger-annotations = "2.2.36"

[libraries]
# --- Spring Boot (starters) ---
spring-boot-starter-oauth2-client = { module = "org.springframework.boot:spring-boot-starter-oauth2-client", version.ref = "spring-boot" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }

# --- Spring Cloud (gateway, feign, circuitbreaker, loadbalancer, contract) ---
spring-cloud-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign", version.ref = "spring-cloud" }
spring-cloud-starter-contract-stub-runner = { module = "org.springframework.cloud:spring-cloud-starter-contract-stub-runner", version.ref = "spring-cloud" }
spring-cloud-starter-circuitbreaker-reactor-resilience4j = { module = "org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j", version = "3.3.0" }
spring-cloud-starter-gateway = { module = "org.springframework.cloud:spring-cloud-starter-gateway-server-webflux", version.ref = "spring-cloud" }
spring-cloud-starter-loadbalancer = { module = "org.springframework.cloud:spring-cloud-starter-loadbalancer", version.ref = "spring-cloud" }
spring-cloud-starter-eureka-server = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server", version.ref = "spring-cloud" }

# --- Messaging / Kafka ---
spring-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "spring-kafka" }

# --- Resilience / Fault tolerance ---
resilience4j-feign = { module = "io.github.resilience4j:resilience4j-feign", version.ref = "resilience4j" }
resilience4j-spring-boot2 = { module = "io.github.resilience4j:resilience4j-spring-boot2", version.ref = "resilience4j" }
spring-retry = { module = "org.springframework.retry:spring-retry", version.ref = "spring-retry" }

# --- Reactive / Reactor (testing helpers) ---
reactor-test = { module = "io.projectreactor:reactor-test", version.ref = "reactor-test" }

# --- Mapping / Codegen (MapStruct + Lombok binding) ---
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
lombok-mapstruct-binding = { module = "org.projectlombok:lombok-mapstruct-binding", version = "0.2.0" }

# --- Keycloak (auth / admin) ---
keycloak-admin-client = { module = "org.keycloak:keycloak-admin-client", version.ref = "keycloak-admin-client" }
keycloak-services = { module = "org.keycloak:keycloak-services", version.ref = "keycloak-services" }

# --- Database / Migrations ---
liquibase-core = { module = "org.liquibase:liquibase-core", version.ref = "liquibase" }

# --- Testing (JUnit) ---
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }

# --- Docs ---
spring-doc-mvc = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "spring-doc" }
spring-doc-flux = { module = "org.springdoc:springdoc-openapi-starter-webflux-ui", version.ref = "spring-doc" }
swagger-annotations-jakarta = { module = "io.swagger.core.v3:swagger-annotations-jakarta", version.ref = "swagger-annotations" }
