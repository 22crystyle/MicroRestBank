# Здесь будет OpenAPI описание всех доступных эндпоинтов и моделей данных.
openapi: 3.1.0
info:
  title: REST Bank API
  description: Backend-приложение на Java (Spring Boot) для управления банковскими картами
  version: 1.0.0
servers:
  - url: 'http://localhost:1024/api/v1'
    description: Development server
paths:
  /accounts:
    get:
      summary: Get paginated list of accounts
      description: Returns a paginated list of account resources. Requires ADMIN role.
      parameters:
        - name: page
          in: query
          description: Page index (0-based)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: Page size
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        "200":
          description: A page of accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfAccountResponse'
  /accounts/{id}:
    get:
      summary: Get account by id
      description: Returns account response by user id. Requires ADMIN role.
      parameters:
        - name: id
          in: path
          description: ID of the account to retrieve
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        "200":
          description: Return account by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        "404":
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accountNotFound:
                  summary: Account does not exists
                  value:
                    status: 404
                    message: Account with id={id} not found.
        "403":
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                accessDenied:
                  summary: Not enough privileges
                  value:
                    status: 403
                    message: Access denied
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Error:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
      required:
        - status
        - message
    PageOfAccountResponse:
      description: New schema
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/AccountResponse'
    AccountResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: johndoe
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: johndoe@example.com
        phone:
          type: string
          example: "+1-800-555-1234"
      required:
        - id
        - username
        - firstName
        - lastName
        - email
        - phone




  