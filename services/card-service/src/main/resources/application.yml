server:
  port: 0
spring:
  application:
    name: card-service
  cloud:
    discovery:
      client:
        simple:
          instances:
            customer-service:
              - uri: http://localhost:1026
    loadbalancer:
      retry:
        enabled: true
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_JDBC_URL}?currentSchema=card_schema
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  liquibase:
    liquibase-schema: card_schema
    default-schema: card_schema
    change-log: classpath:/db/migration/db.changelog-master.yaml
    enabled: true
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI}
  data:
    jdbc:
      dialect: postgresql
  kafka:
    consumer:
      group-id: user-sync-group
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
    admin:
      auto-create: false
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL}
    registry-fetch-interval-seconds: 5
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /api-docs
logging:
  level:
    com.netflix.discovery: warn
    com.netflix.eureka: warn
management:
  server:
    port: 8081