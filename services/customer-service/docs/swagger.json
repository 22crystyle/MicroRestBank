{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenApi specification - RestBank",
    "description": "OpenApi documentation for RestBank",
    "termsOfService": "Terms of service",
    "contact": {
      "name": "Kryshtal Maxim",
      "url": "https://github.com/22crystyle",
      "email": "shimorowm@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https//opensource.org/licenses/MIT"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://172.18.0.8:36173",
      "description": "Generated server url"
    },
    {
      "url": "http://localhost:1024/customers",
      "description": "Customer Service ENV"
    }
  ],
  "tags": [
    {
      "name": "Customers",
      "description": "Operations related to customer management."
    }
  ],
  "paths": {
    "/api/v1/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get a paginated list of customers",
        "description": "Retrieves a paginated list of all customers. Requires administrator privileges.",
        "operationId": "pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page index (0-based)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            },
            "example": 0
          },
          {
            "name": "size",
            "in": "query",
            "description": "Page size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10,
              "minimum": 1
            },
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of customers.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageCustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/customers/{uuid}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get a customer by UUID",
        "description": "Retrieves the details of a specific customer by their UUID. Requires administrator privileges.",
        "operationId": "getCustomerByUUID",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the customer to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer found.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v1/customers/me": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get current customer details",
        "description": "Retrieves the details of the currently authenticated user.",
        "operationId": "getCurrentCustomer",
        "responses": {
          "200": {
            "description": "The current customer\u0027s details.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CustomerResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageCustomerResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerResponse"
            }
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "last": {
            "type": "boolean"
          },
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "unpaged": {
            "type": "boolean"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "sorted": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "description": "JWT auth description",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}