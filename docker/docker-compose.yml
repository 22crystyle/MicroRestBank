services:
  db:
    container_name: db
    image: postgres:17.5-alpine3.21
    environment:
      POSTGRES_DB: restbank
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - restbank-net

  kafka:
    container_name: kafka
    image: apache/kafka:3.9.1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,PLAINTEXT_INTERNAL://0.0.0.0:29092"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka-kraft:29092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_DIRS: /kafka-logs
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      CLUSTER_ID: ZDk2MTBhMjkwNzdiNDgwYz
    volumes:
      - ./kafka/kafka-logs:/kafka-logs
    networks:
      - restbank-net

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.3
    ports:
      - "7080:7080"
      - "7443:7443"
      - "9000:9000"
    environment:
      KC_HOSTNAME_URL: http://keycloak:7080
      KC_HOSTNAME_STRICT: false
      KC_PROXY_HEADERS: xforwarded
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_LOG_LEVEL: info
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000; echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost:9000\r\nConnection: close\r\n\r\n' >&3;cat <&3 | grep -q '\"status\": \"UP\"' && exit 0 || exit 1"]
      interval: 15s
      timeout: 2s
      retries: 4
    command: [
      "start-dev",
      "--http-port", "7080",
      "--https-port", "7443",
      "--import-realm",
      "--verbose",
      "--spi-events-listener=kafka-listener:enabled=true",
      "--spi-events-listener=kafka-listener:bootstrap_servers=kafka:9092",
      "--health-enabled=true",
      "--metrics-enabled=true"
    ]
    env_file:
      - ".env"
    volumes:
      - ./keycloak/import:/opt/keycloak/data/import
      - ./keycloak/providers:/opt/keycloak/providers
    depends_on:
      - kafka
    networks:
      - restbank-net
  api-gateway:
    container_name: api-gateway
    build:
      context: ../
      dockerfile: services/api-gateway/Dockerfile
    ports:
      - "1024:1024"
    env_file:
      - ".env"
    networks:
      - restbank-net
    depends_on:
      keycloak:
        condition: service_healthy

  eureka-server:
    container_name: eureka-server
    build:
      context: ../
      dockerfile: services/eureka-server/Dockerfile
    ports:
      - "8761:8761"
    env_file:
      - ".env"
    networks:
      - restbank-net

volumes:
  pgdata:

networks:
  restbank-net:
    driver: bridge
